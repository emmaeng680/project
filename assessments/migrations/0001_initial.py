# Generated by Django 4.2.10 on 2025-05-03 16:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('patients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='VitalSigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('blood_pressure_systolic', models.PositiveIntegerField()),
                ('blood_pressure_diastolic', models.PositiveIntegerField()),
                ('heart_rate', models.PositiveIntegerField()),
                ('respiratory_rate', models.PositiveIntegerField()),
                ('temperature', models.DecimalField(decimal_places=1, max_digits=4)),
                ('oxygen_saturation', models.PositiveIntegerField()),
                ('blood_glucose', models.PositiveIntegerField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='patients.patient')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.user')),
            ],
            options={
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='NIHSSAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessed_at', models.DateTimeField(auto_now_add=True)),
                ('loc', models.PositiveSmallIntegerField(choices=[(0, '0 - Alert'), (1, '1 - Drowsy'), (2, '2 - Stuporous'), (3, '3 - Coma')])),
                ('loc_questions', models.PositiveSmallIntegerField(choices=[(0, '0 - Answers both correctly'), (1, '1 - Answers one correctly'), (2, '2 - Answers none correctly')])),
                ('loc_commands', models.PositiveSmallIntegerField(choices=[(0, '0 - Performs both tasks'), (1, '1 - Performs one task'), (2, '2 - Performs neither')])),
                ('gaze', models.PositiveSmallIntegerField(choices=[(0, '0 - Normal'), (1, '1 - Partial gaze palsy'), (2, '2 - Total gaze palsy')])),
                ('visual_fields', models.PositiveSmallIntegerField(choices=[(0, '0 - No visual loss'), (1, '1 - Partial hemianopia'), (2, '2 - Complete hemianopia'), (3, '3 - Bilateral hemianopia')])),
                ('facial_palsy', models.PositiveSmallIntegerField(choices=[(0, '0 - Normal'), (1, '1 - Minor'), (2, '2 - Partial'), (3, '3 - Complete')])),
                ('motor_arm_left', models.PositiveSmallIntegerField(choices=[(0, '0 - No drift'), (1, '1 - Drift'), (2, "2 - Can't resist gravity"), (3, '3 - No effort against gravity'), (4, '4 - No movement')])),
                ('motor_arm_right', models.PositiveSmallIntegerField(choices=[(0, '0 - No drift'), (1, '1 - Drift'), (2, "2 - Can't resist gravity"), (3, '3 - No effort against gravity'), (4, '4 - No movement')])),
                ('motor_leg_left', models.PositiveSmallIntegerField(choices=[(0, '0 - No drift'), (1, '1 - Drift'), (2, "2 - Can't resist gravity"), (3, '3 - No effort against gravity'), (4, '4 - No movement')])),
                ('motor_leg_right', models.PositiveSmallIntegerField(choices=[(0, '0 - No drift'), (1, '1 - Drift'), (2, "2 - Can't resist gravity"), (3, '3 - No effort against gravity'), (4, '4 - No movement')])),
                ('ataxia', models.PositiveSmallIntegerField(choices=[(0, '0 - Absent'), (1, '1 - Present in one limb'), (2, '2 - Present in two limbs')])),
                ('sensory', models.PositiveSmallIntegerField(choices=[(0, '0 - Normal'), (1, '1 - Mild loss'), (2, '2 - Severe loss')])),
                ('language', models.PositiveSmallIntegerField(choices=[(0, '0 - No aphasia'), (1, '1 - Mild aphasia'), (2, '2 - Severe aphasia'), (3, '3 - Mute')])),
                ('dysarthria', models.PositiveSmallIntegerField(choices=[(0, '0 - Normal'), (1, '1 - Mild'), (2, '2 - Severe')])),
                ('extinction', models.PositiveSmallIntegerField(choices=[(0, '0 - No abnormality'), (1, '1 - Mild'), (2, '2 - Severe')])),
                ('notes', models.TextField(blank=True)),
                ('assessed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.user')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nihss_assessments', to='patients.patient')),
            ],
            options={
                'ordering': ['-assessed_at'],
            },
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=100)),
                ('test_value', models.CharField(max_length=50)),
                ('reference_range', models.CharField(max_length=50)),
                ('is_abnormal', models.BooleanField(default=False)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_results', to='patients.patient')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.user')),
            ],
            options={
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='ImagingStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_type', models.CharField(choices=[('CT', 'CT Scan'), ('CTA', 'CT Angiography'), ('MRI', 'MRI'), ('MRA', 'MR Angiography')], max_length=3)),
                ('performed_at', models.DateTimeField(auto_now_add=True)),
                ('findings', models.TextField()),
                ('image_url', models.URLField(blank=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imaging_studies', to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.user')),
            ],
            options={
                'verbose_name_plural': 'Imaging Studies',
                'ordering': ['-performed_at'],
            },
        ),
    ]
